/*! 

  \mainpage Main Page

  \section intro_sec Device Overview
 
  This is a set of open-source device headers for the 8-bit  
  <a href="https://www.st.com/en/microcontrollers-microprocessors/stm8-8-bit-mcus.html">STM8 microcontroller</a> 
  family by <a href="https://www.st.com">STMicroelectronics</a>.
  For a brief introduction to the STM8 see e.g. 
  <a href="https://en.wikipedia.org/wiki/STM8">here</a> or  
  <a href="https://jaycarlson.net/pf/st-stm8">here</a>.

  Due to a superb performance to cost ratio, low current consumption and ease-of-use,
  STM8s are widely used in low-end electronic
  <a href="https://github.com/TG9541/stm8ef/wiki/STM8S-Value-Line-Gadgets">gadgets</a>, 
  and a lot of <a href="http://www.colecovision.eu/stm8/">development boards</a> 
  are readily available.


  \section toolchain_sec Toolchains

  Several commercial cross-compilers support the STM8, namely 
  <a href="http://www.cosmic-software.com/stm8.php">Cosmic</a>, 
  <a href="https://www.iar.com/iar-embedded-workbench/#!?architecture=STM8">IAR</a> and 
  <a href="http://www.raisonance.com/stm8-compiler.html">Raisonance</a>. 
  In addition, the open-source compiler 
  <a href="http://sdcc.sourceforge.net/">SDCC</a> 
  also supports the STM8 since v3.4.0.

  All commercial compilers come with device headers pre-installed, but these are mutually 
  incompatible and (of course) not open-source. SDCC does not come with STM8 device headers due to
  license issues.

  To facilitate development, STM provides the so-called 
  <a href="https://www.st.com/en/embedded-software/stsw-stm8069.html">Standard Peripheral Library (SPL)</a> 
  which contains not only device headers, but also standardized peripherals functions. The SPL is compatible
  with all above commercial compilers out of the box, and with SDCC via a  
  <a href="https://github.com/gicking/STM8-SPL_SDCC_patch">patch</a>. Unfortunately
  the SPL is also not 100\% open-source, as discussed
  <a href="https://github.com/gicking/STM8-SPL_SDCC_patch/issues/1">here</a> or
  <a href="https://github.com/STM8-SPL-license/discussion/issues/1">here</a>. 


  \section header_sec Open-Source Headers
 
  A lot of (more or less complete) STM8 device headers is available on the internet, e.g.
  <a href="https://github.com/junaidpv/stm8/blob/master/inc/stm8s.h">here</a> or
  <a href="https://github.com/tymmothy/libstm8s/blob/master/inc/stm8s.h">here</a>. 
  Alternatively one can also use the SPL headers, or those from the above commercial compilers
  (if license allows). However, these are all mutually incompatible, and thus hinder the
  exchange of code snippets between projects. Compare this to the  
  <a href="https://www.arduino.cc">Arduino</a> and 
  <a href="http://www.nongnu.org/avr-libc">avr-libc</a> multiverse...  :-(
  
  Following a longer 
  <a href="https://github.com/STM8-SPL-license/discussion/issues/1">discussion</a>, 
  here is a proposal for open-source STM8 device headers, published under 
  <a href="https://www.gnu.org/licenses">GPL3+</a>.
  They are intended for inclusion into the 
  <a href="http://sdcc.sourceforge.net/">SDCC</a>
  distribution, but are compatible with all above compilers. 
  My final aim is to provide standardized device headers for all available STM8 devices, 
  which can be used in open-source projects without restrictions, and facilitate
  code exchange withon the STM8 OS-community.  


  \subsection content_ssec Content

  - device headers for all STM8AF, STM8S, STM8L10x and STM8TL5x devices (81 of 138 STM8 devices and growing)
  - this reference as HTML and PDF (created by <a href="http://sdcc.sourceforge.net/">Doxygen</a>)
  - example projects for SDCC, Cosmic, IAR and Raisonance toolchains 
    - pin toggle (aka blink)
    - timer interrupts
    - serial communication (incl. printf() and gets())
    - analog measurements
    - PWM generation
    - mixing with SPL headers and routines


  \subsection features_ssec Features

  - direct/bitwise or byte-wise access to all peripheral registers
  - assembler macros for common operations like \e NOP() or \e DISABLE_INTERRUPTS() 
  - can be mixed with SPL headers and functions (see example \e blink_TIM4_SPL)

  Example:

  \code{.c}

    // device header (STM8 Discovery board)
    #include "STM8S105C6.h"

    // configure LED pin to output push-pull (bitmasks)
    _GPIOD_DDR |= _GPIO_PIN0;        // input(=0) or output(=1)
    _GPIOD_CR1 |= _GPIO_PIN0;        // input: 0=float, 1=pull-up; output: 0=open-drain, 1=push-pull
    _GPIOD_CR2 |= _GPIO_PIN0;        // input: 0=no exint, 1=exint; output: 0=2MHz slope, 1=10MHz slope
  
    // main loop
    while (1) {

      // toggle LED
      //_GPIOD_ODR ^= _GPIO_PIN0;        // byte access (smaller)
      _GPIOD.ODR.PIN0 ^= 1;            // bit access (more convenient)
  
      // wait a bit
      for (uint16_t i=20000L; i; i--)
        NOP();

    } // main loop

  \endcode

*/